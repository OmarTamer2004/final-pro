# -*- coding: utf-8 -*-
"""app project .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UtFQBDXD4h2Kv9f1ym2ZZfIiqbsKy-VQ
"""

pip install streamlit

from google.colab import drive
drive.mount('/content/drive')

import streamlit as st
import numpy as np
from PIL import Image
import tensorflow as tf

# إعداد الصفحة
st.set_page_config(page_title="🗑️ Garbage Classifier", layout="centered")

@st.cache_resource
def load_model():
    model = tf.keras.models.load_model("/content/drive/MyDrive/project /garbage_classifier.keras")
    class_names = np.load("/content/drive/MyDrive/project /class_names.npy", allow_pickle=True)
    return model, class_names

model, class_names = load_model()

# العنوان والوصف
st.title("🧹 Garbage Classification App")
st.markdown("Upload an image of garbage and the model will classify it into one of the predefined categories.")

# رفع صورة
uploaded_file = st.file_uploader("📤 Upload a garbage image", type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    # عرض الصورة
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_container_width=True)

    # معالجة الصورة
    image_resized = image.resize((224, 224))
    img_array = np.array(image_resized) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # التنبؤ
    prediction = model.predict(img_array)
    predicted_class = class_names[np.argmax(prediction)]
    confidence = np.max(prediction) * 100

    # عرض النتيجة
    st.success(f"🧠 Predicted Class: **{predicted_class}**")
    st.info(f"🔍 Confidence: **{confidence:.2f}%**")

    # عرض احتمالات كل الفئات
    st.subheader("🔢 Prediction Probabilities:")
    for i, class_name in enumerate(class_names):
        st.write(f"{class_name}: {prediction[0][i]:.4f}")

